{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PV\\\\Downloads\\\\CN5\\\\FER_ASS\\\\fer202\\\\src\\\\Game1\\\\TicTacToe.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Game1.css\"; // Đảm bảo import đúng file CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicTacToe = () => {\n  _s();\n  const size = 10; // Kích thước bảng 10x10\n  const [board, setBoard] = useState(Array(size * size).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const handleClick = index => {\n    if (board[index] || winner) return; // Không cho phép click vào ô đã chọn hoặc khi đã có người thắng\n\n    const newBoard = [...board];\n    newBoard[index] = xIsNext ? \"X\" : \"O\";\n    setBoard(newBoard);\n    setXIsNext(!xIsNext);\n    checkWinner(newBoard, index);\n  };\n  const checkWinner = (newBoard, index) => {\n    const player = newBoard[index];\n    if (!player) return;\n    const directions = [[1, 0],\n    // Hàng ngang\n    [0, 1],\n    // Cột dọc\n    [1, 1],\n    // Chéo chính\n    [1, -1] // Chéo phụ\n    ];\n    for (let [dx, dy] of directions) {\n      let count = 1;\n      for (let i = 1; i < 5; i++) {\n        const nx = index % size + dx * i;\n        const ny = Math.floor(index / size) + dy * i;\n        if (nx < 0 || ny < 0 || nx >= size || ny >= size) break;\n        if (newBoard[ny * size + nx] === player) count++;else break;\n      }\n      for (let i = 1; i < 5; i++) {\n        const nx = index % size - dx * i;\n        const ny = Math.floor(index / size) - dy * i;\n        if (nx < 0 || ny < 0 || nx >= size || ny >= size) break;\n        if (newBoard[ny * size + nx] === player) count++;else break;\n      }\n      if (count >= 5) {\n        setWinner(player);\n        return;\n      }\n    }\n  };\n  const resetGame = () => {\n    setBoard(Array(size * size).fill(null));\n    setXIsNext(true);\n    setWinner(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tic-tac-toe\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"C\\u1EDD Ca R\\xF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `square ${value ? value : \"\"}`,\n        onClick: () => handleClick(index),\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status\",\n        children: [\"Winner: \", winner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: resetGame,\n        children: \"B\\u1EAFt \\u0111\\u1EA7u l\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(TicTacToe, \"oQsUANAv1JNBkhEJVJ3gL5iR6tA=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TicTacToe","_s","size","board","setBoard","Array","fill","xIsNext","setXIsNext","winner","setWinner","handleClick","index","newBoard","checkWinner","player","directions","dx","dy","count","i","nx","ny","Math","floor","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PV/Downloads/CN5/FER_ASS/fer202/src/Game1/TicTacToe.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Game1.css\"; // Đảm bảo import đúng file CSS\r\n\r\nconst TicTacToe = () => {\r\n  const size = 10; // Kích thước bảng 10x10\r\n  const [board, setBoard] = useState(Array(size * size).fill(null));\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n  const [winner, setWinner] = useState(null);\r\n\r\n  const handleClick = (index) => {\r\n    if (board[index] || winner) return; // Không cho phép click vào ô đã chọn hoặc khi đã có người thắng\r\n\r\n    const newBoard = [...board];\r\n    newBoard[index] = xIsNext ? \"X\" : \"O\";\r\n    setBoard(newBoard);\r\n    setXIsNext(!xIsNext);\r\n    checkWinner(newBoard, index);\r\n  };\r\n\r\n  const checkWinner = (newBoard, index) => {\r\n    const player = newBoard[index];\r\n    if (!player) return;\r\n\r\n    const directions = [\r\n      [1, 0], // Hàng ngang\r\n      [0, 1], // Cột dọc\r\n      [1, 1], // Chéo chính\r\n      [1, -1], // Chéo phụ\r\n    ];\r\n\r\n    for (let [dx, dy] of directions) {\r\n      let count = 1;\r\n\r\n      for (let i = 1; i < 5; i++) {\r\n        const nx = (index % size) + dx * i;\r\n        const ny = Math.floor(index / size) + dy * i;\r\n        if (nx < 0 || ny < 0 || nx >= size || ny >= size) break;\r\n        if (newBoard[ny * size + nx] === player) count++;\r\n        else break;\r\n      }\r\n\r\n      for (let i = 1; i < 5; i++) {\r\n        const nx = (index % size) - dx * i;\r\n        const ny = Math.floor(index / size) - dy * i;\r\n        if (nx < 0 || ny < 0 || nx >= size || ny >= size) break;\r\n        if (newBoard[ny * size + nx] === player) count++;\r\n        else break;\r\n      }\r\n\r\n      if (count >= 5) {\r\n        setWinner(player);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setBoard(Array(size * size).fill(null));\r\n    setXIsNext(true);\r\n    setWinner(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tic-tac-toe\">\r\n      <h1>Cờ Ca Rô</h1>\r\n      <div className=\"board\">\r\n        {board.map((value, index) => (\r\n          <div\r\n            key={index}\r\n            className={`square ${value ? value : \"\"}`}\r\n            onClick={() => handleClick(index)}\r\n          >\r\n            {value}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {winner && (\r\n        <div className=\"status-container\">\r\n          <p className=\"status\">Winner: {winner}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Nút Bắt Đầu Lại */}\r\n      <div className=\"reset-container\">\r\n        <button className=\"reset-button\" onClick={resetGame}>\r\n          Bắt đầu lại\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicTacToe;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}