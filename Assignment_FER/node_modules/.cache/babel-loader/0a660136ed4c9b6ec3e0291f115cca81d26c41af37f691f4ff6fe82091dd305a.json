{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PV\\\\Downloads\\\\CN5\\\\FER_ASS\\\\fer202\\\\src\\\\Game2\\\\components1\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = {\n  shrimp: \"/images/shrimp.png\",\n  fish: \"/images/fish.png\",\n  crab: \"/images/crab.png\",\n  rooster: \"/images/rooster.png\",\n  gourd: \"/images/gourd.png\",\n  deer: \"/images/deer.png\"\n};\nconst choices = Object.keys(images);\nconst Board = ({\n  bets,\n  setMoney,\n  setBets,\n  setResult,\n  result\n}) => {\n  _s();\n  const [dice, setDice] = useState([\"shrimp\", \"fish\", \"crab\"]);\n  const [isRolling, setIsRolling] = useState(false);\n  const [showResult, setShowResult] = useState(false); // Ki·ªÉm so√°t hi·ªÉn th·ªã k·∫øt qu·∫£\n\n  const totalBet = Object.values(bets).reduce((sum, value) => sum + value, 0);\n  const rollDice = () => {\n    if (totalBet === 0) {\n      setResult(\"B·∫°n ph·∫£i ƒë·∫∑t c∆∞·ª£c tr∆∞·ªõc khi quay!\");\n      return;\n    }\n    setIsRolling(true); // Che x√∫c x·∫Øc + k·∫øt qu·∫£\n    setShowResult(false); // ·∫®n k·∫øt qu·∫£\n\n    let rollCount = 0;\n    const rollInterval = setInterval(() => {\n      setDice([choices[Math.floor(Math.random() * choices.length)], choices[Math.floor(Math.random() * choices.length)], choices[Math.floor(Math.random() * choices.length)]]);\n      rollCount++;\n      if (rollCount >= 10) {\n        clearInterval(rollInterval);\n        finalizeRoll();\n      }\n    }, 100); // L·∫Øc trong 1 gi√¢y\n  };\n  const finalizeRoll = () => {\n    const newDice = Array(3).fill(null).map(() => choices[Math.floor(Math.random() * choices.length)]);\n    setDice(newDice);\n    let winnings = 0;\n    newDice.forEach(item => {\n      if (bets[item] > 0) {\n        winnings += bets[item] * 2;\n      }\n    });\n    setMoney(prev => prev + winnings);\n    setResult(winnings > 0 ? `B·∫°n th·∫Øng ${winnings} xu!` : \"B·∫°n thua c∆∞·ª£c!\");\n    setTimeout(() => {\n      setIsRolling(false); // M·ªü x√∫c x·∫Øc\n      setTimeout(() => setShowResult(true), 500); // Hi·ªÉn th·ªã k·∫øt qu·∫£ sau 0.5s\n    }, 500);\n\n    // Reset c∆∞·ª£c sau khi quay\n    setBets({\n      shrimp: 0,\n      fish: 0,\n      crab: 0,\n      rooster: 0,\n      gourd: 0,\n      deer: 0\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dice-container\",\n      className: isRolling ? \"rolling\" : \"\",\n      children: [isRolling && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cover\",\n        children: \"\\uD83D\\uDD90\\uFE0F N\\u1EB7n x\\xFAc x\\u1EAFc...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }, this), dice.map((d, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[d],\n        alt: d,\n        className: \"dice\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"roll-button\",\n      onClick: rollDice,\n      disabled: isRolling || totalBet === 0,\n      children: \"Quay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), !isRolling && showResult && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"MNvyrNqsdrgfJyG3/031t3QQAQQ=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","images","shrimp","fish","crab","rooster","gourd","deer","choices","Object","keys","Board","bets","setMoney","setBets","setResult","result","_s","dice","setDice","isRolling","setIsRolling","showResult","setShowResult","totalBet","values","reduce","sum","value","rollDice","rollCount","rollInterval","setInterval","Math","floor","random","length","clearInterval","finalizeRoll","newDice","Array","fill","map","winnings","forEach","item","prev","setTimeout","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","d","index","src","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/PV/Downloads/CN5/FER_ASS/fer202/src/Game2/components1/Board.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst images = {\r\n  shrimp: \"/images/shrimp.png\",\r\n  fish: \"/images/fish.png\",\r\n  crab: \"/images/crab.png\",\r\n  rooster: \"/images/rooster.png\",\r\n  gourd: \"/images/gourd.png\",\r\n  deer: \"/images/deer.png\",\r\n};\r\n\r\nconst choices = Object.keys(images);\r\n\r\nconst Board = ({ bets, setMoney, setBets, setResult, result }) => {\r\n  const [dice, setDice] = useState([\"shrimp\", \"fish\", \"crab\"]);\r\n  const [isRolling, setIsRolling] = useState(false);\r\n  const [showResult, setShowResult] = useState(false); // Ki·ªÉm so√°t hi·ªÉn th·ªã k·∫øt qu·∫£\r\n\r\n  const totalBet = Object.values(bets).reduce((sum, value) => sum + value, 0);\r\n\r\n  const rollDice = () => {\r\n    if (totalBet === 0) {\r\n      setResult(\"B·∫°n ph·∫£i ƒë·∫∑t c∆∞·ª£c tr∆∞·ªõc khi quay!\");\r\n      return;\r\n    }\r\n\r\n    setIsRolling(true); // Che x√∫c x·∫Øc + k·∫øt qu·∫£\r\n    setShowResult(false); // ·∫®n k·∫øt qu·∫£\r\n\r\n    let rollCount = 0;\r\n    const rollInterval = setInterval(() => {\r\n      setDice([\r\n        choices[Math.floor(Math.random() * choices.length)],\r\n        choices[Math.floor(Math.random() * choices.length)],\r\n        choices[Math.floor(Math.random() * choices.length)],\r\n      ]);\r\n      rollCount++;\r\n      if (rollCount >= 10) {\r\n        clearInterval(rollInterval);\r\n        finalizeRoll();\r\n      }\r\n    }, 100); // L·∫Øc trong 1 gi√¢y\r\n  };\r\n\r\n  const finalizeRoll = () => {\r\n    const newDice = Array(3)\r\n      .fill(null)\r\n      .map(() => choices[Math.floor(Math.random() * choices.length)]);\r\n    setDice(newDice);\r\n\r\n    let winnings = 0;\r\n    newDice.forEach((item) => {\r\n      if (bets[item] > 0) {\r\n        winnings += bets[item] * 2;\r\n      }\r\n    });\r\n\r\n    setMoney((prev) => prev + winnings);\r\n    setResult(winnings > 0 ? `B·∫°n th·∫Øng ${winnings} xu!` : \"B·∫°n thua c∆∞·ª£c!\");\r\n\r\n    setTimeout(() => {\r\n      setIsRolling(false); // M·ªü x√∫c x·∫Øc\r\n      setTimeout(() => setShowResult(true), 500); // Hi·ªÉn th·ªã k·∫øt qu·∫£ sau 0.5s\r\n    }, 500);\r\n\r\n    // Reset c∆∞·ª£c sau khi quay\r\n    setBets({\r\n      shrimp: 0,\r\n      fish: 0,\r\n      crab: 0,\r\n      rooster: 0,\r\n      gourd: 0,\r\n      deer: 0,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"game\">\r\n      <div id=\"dice-container\" className={isRolling ? \"rolling\" : \"\"}>\r\n        {isRolling && <div className=\"cover\">üñêÔ∏è N·∫∑n x√∫c x·∫Øc...</div>}\r\n        {dice.map((d, index) => (\r\n          <img key={index} src={images[d]} alt={d} className=\"dice\" />\r\n        ))}\r\n      </div>\r\n\r\n      <button id=\"roll-button\" onClick={rollDice} disabled={isRolling || totalBet === 0}>\r\n        Quay\r\n      </button>\r\n\r\n      {!isRolling && showResult && <p className=\"result\">{result}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}