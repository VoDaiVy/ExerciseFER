import React, { useState, useRef } from "react";
import "./TaiXiu.css";
import dice1 from "./Dice/dice1.png";
import dice2 from "./Dice/dice2.png";
import dice3 from "./Dice/dice3.png";
import dice4 from "./Dice/dice4.png";
import dice5 from "./Dice/dice5.png";
import dice6 from "./Dice/dice6.png";
import backgroundLeft from "./Dice/CNP.webp"; // Th√™m h√¨nh ·∫£nh b√™n tr√°i
import backgroundRight from "./Dice/CTT.jpg"; // Th√™m h√¨nh ·∫£nh b√™n ph·∫£i

const diceImages = [dice1, dice2, dice3, dice4, dice5, dice6];

const TaiXiu = () => {
  const [diceValues, setDiceValues] = useState([1, 1, 1]);
  const [bet, setBet] = useState(null);
  const [betAmount, setBetAmount] = useState(10000);
  const [gameResult, setGameResult] = useState("");
  const [rolling, setRolling] = useState(false);
  const [covered, setCovered] = useState(true);
  const [balance, setBalance] = useState(100000);
  const [finalResult, setFinalResult] = useState(null);
  const coverRef = useRef(null);

  const rollDice = () => {
    if (!bet) {
      setGameResult("B·∫°n c·∫ßn ƒë·∫∑t c∆∞·ª£c tr∆∞·ªõc!");
      return;
    }

    if (betAmount <= 0 || betAmount > balance) {
      setGameResult("S·ªë ti·ªÅn c∆∞·ª£c kh√¥ng h·ª£p l·ªá!");
      return;
    }

    setRolling(true);
    setCovered(true);
    setGameResult("");
    setFinalResult(null);

    setTimeout(() => {
      const newValues = [
        Math.floor(Math.random() * 6) + 1,
        Math.floor(Math.random() * 6) + 1,
        Math.floor(Math.random() * 6) + 1,
      ];
      setDiceValues(newValues);

      const total = newValues.reduce((sum, num) => sum + num, 0);
      const result = total >= 11 ? "T√†i" : "X·ªâu";

      setRolling(false);
      setFinalResult({ total, result });
    }, 2000);
  };

  const handleMouseEnter = () => {
    if (!rolling && finalResult && covered) {
      setCovered(false); // M·ªü v·∫≠t tr√≤n

      if (bet === finalResult.result) {
        setBalance((prev) => prev + betAmount);
        setGameResult(`üéâ B·∫°n th·∫Øng! +${betAmount.toLocaleString()} VNƒê (K·∫øt qu·∫£: ${finalResult.total} - ${finalResult.result})`);
      } else {
        setBalance((prev) => prev - betAmount);
        setGameResult(`üòû B·∫°n thua! -${betAmount.toLocaleString()} VNƒê (K·∫øt qu·∫£: ${finalResult.total} - ${finalResult.result})`);
      }
    }
  };

  return (
    <div className="game-container">
      {/* Nh·∫°c n·ªÅn */}
      <audio autoPlay loop>
        <source src="/audio/sunwin.mp3" type="audio/mpeg" />
        Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ ph√°t nh·∫°c.
      </audio>

      {/* H√¨nh ·∫£nh hai b√™n */}
      <img src={backgroundLeft} alt="Background Left" className="background-left" />
      <img src={backgroundRight} alt="Background Right" className="background-right" />

      {/* N·ªôi dung ch√≠nh */}
      <div className="taixiu-container">
        <h1 className="title">Game T√†i X·ªâu üé≤</h1>
        <div className="balance">üí∞ S·ªë d∆∞: <strong>{balance.toLocaleString()} VNƒê</strong></div>
        <div className="bet-input">
          <label>Nh·∫≠p s·ªë ti·ªÅn c∆∞·ª£c: </label>
          <input
            type="number"
            value={betAmount}
            onChange={(e) => setBetAmount(Math.max(0, Math.min(balance, Number(e.target.value))))}
          />
        </div>
        <div className="game-board">
          <div className="section">
            <h2>T√ÄI </h2>
            <button className={`bet-button ${bet === "T√†i" ? "active" : ""}`} onClick={() => setBet("T√†i")}>
              ƒê·∫∑t
            </button>
          </div>
          <div className="dice-container">
            <div className="dice-row">
              <img src={diceImages[diceValues[0] - 1]} alt="Dice" className={`dice ${rolling ? "rolling" : ""}`} />
              <img src={diceImages[diceValues[1] - 1]} alt="Dice" className={`dice ${rolling ? "rolling" : ""}`} />
            </div>
            <div className="dice-row single">
              <img src={diceImages[diceValues[2] - 1]} alt="Dice" className={`dice ${rolling ? "rolling" : ""}`} />
            </div>
            {covered && (
              <div ref={coverRef} className="cover-circle" onMouseEnter={handleMouseEnter}>
                Di chu·ªôt v√†o ƒë·ªÉ m·ªü!
              </div>
            )}
          </div>
          <div className="section">
            <h2>X·ªàU </h2>
            <button className={`bet-button ${bet === "X·ªâu" ? "active" : ""}`} onClick={() => setBet("X·ªâu")}>
              ƒê·∫∑t
            </button>
          </div>
        </div>
        <button className="roll-button" onClick={rollDice} disabled={rolling}>
          {rolling ? "ƒêang l·∫Øc..." : "L·∫Øc X√∫c X·∫Øc üé≤"}
        </button>
        {!covered && <p className="result">{gameResult}</p>}
      </div>
    </div>
  );
};

export default TaiXiu;
